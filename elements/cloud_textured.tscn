[gd_scene load_steps=5 format=3 uid="uid://bifmvhxrvujyf"]

[ext_resource type="Texture2D" uid="uid://d16kseeoielgj" path="res://assets/water/sea3.png" id="1_2tsbd"]

[sub_resource type="Shader" id="Shader_arjmc"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;

uniform sampler2D texture_vertex : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	vec2 base_uv = UV;
	vec4 vertex_tex = texture(texture_vertex,base_uv);
	vertex_tex.x += TIME / 10.;
	vertex_tex.y += TIME / 14.;
	vertex_tex.z += TIME / 18.;
	vertex_tex *= 10.;
	VERTEX.x = sin(vertex_tex.x);
	VERTEX.y = vertex_tex.x / 10.;
	VERTEX.z = cos(vertex_tex.x);
	//VERTEX *= 2.;
	//VERTEX += vertex_tex.rgb;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bruap"]
render_priority = 0
shader = SubResource("Shader_arjmc")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_vertex = ExtResource("1_2tsbd")

[sub_resource type="PlaneMesh" id="PlaneMesh_538ne"]
material = SubResource("ShaderMaterial_bruap")
subdivide_width = 30
subdivide_depth = 30

[node name="Node3D" type="MeshInstance3D"]
mesh = SubResource("PlaneMesh_538ne")
